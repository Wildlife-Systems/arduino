[["index.html", "Arduino for biologists and environmental scientists Chapter 1 About 1.1 Usage 1.2 Render book 1.3 Preview book", " Arduino for biologists and environmental scientists Ed Baked (Ed.) 2025-02-11 Chapter 1 About This is a sample book written in Markdown. You can use anything that Pandoc’s Markdown supports; for example, a math equation \\(a^2 + b^2 = c^2\\). 1.1 Usage Each bookdown chapter is an .Rmd file, and each .Rmd file can contain one (and only one) chapter. A chapter must start with a first-level heading: # A good chapter, and can contain one (and only one) first-level heading. Use second-level and higher headings within chapters like: ## A short section or ### An even shorter section. The index.Rmd file is required, and is also your first book chapter. It will be the homepage when you render the book. 1.2 Render book You can render the HTML version of this example book without changing anything: Find the Build pane in the RStudio IDE, and Click on Build Book, then select your output format, or select “All formats” if you’d like to use multiple formats from the same book source files. Or build the book from the R console: bookdown::render_book() To render this example to PDF as a bookdown::pdf_book, you’ll need to install XeLaTeX. You are recommended to install TinyTeX (which includes XeLaTeX): https://yihui.org/tinytex/. 1.3 Preview book As you work, you may start a local server to live preview this HTML book. This preview will update as you edit the book when you save individual .Rmd files. You can start the server in a work session by using the RStudio add-in “Preview book”, or from the R console: bookdown::serve_book() "],["introduction.html", "Chapter 2 Introduction", " Chapter 2 Introduction Vince Smith 2017 If data collection, analysis and publication are the central tenets of scientific practice, then to date, only two of these processes have been significantly transformed by the Open Science movement. Open Source software has become the prevailing paradigm to support scientific enquiry, providing a new level of transparency and repeatability to the scientific process. Programming and scripting skills are becoming the norm amongst researchers within the biological science community, creating a new wave of innovation and reusable free tools that were once the preserve of a handful of software developers. Likewise, Open Publishing and Open Access to scientific data has accelerated a culture of data sharing and reuse, pioneered by the likes of GenBank and related molecular databases. The Open Access movement reached an important tipping point in 2014 when it was estimated that more that 50% of all scientific publications published from XXX are freely available. Similarly, an increasing number of data repositories have been developed (e.g. O’Leary &amp; Kaufman, 2011; Baker et al, 2015), supporting the specialist needs of select scientific communities and challenging the concept of traditional publication, via technologies like dataset DOI’s and the concept of data papers (Chavan &amp; Penev, 2011). The development of hardware involved in the collection of data, has until recently been largely untouched by the transition towards Open Science. This founding  step in the lifecycle scientific enquiry, is for the most part still the preserve of specialist industries, who typically build proprietary and expensive systems and hardware that are difficult to customise and repurpose. Data loggers, tracking technologies and camera traps are examples of commonly deployed hardware systems that are indispensable tools in the monitoring of biodiversity. In many cases the specialist needs of biologists are hinders by the tiny commercial markets for devices, prohibiting deployment and development of these systems to all but the mosts general and common applications. To fill this gap, the principles of modularity, reuse and open licensing which are now commonplace within the open source and open access movement, need to be applied to hardware development. There is a common need for a low-cost, low-power, miniaturised, general purpose computing platform that can fulfil the need for multiple common biological use cases. The rise of the maker movement, has popularised the open hardware Arduino platform which fulfils these needs. Arduino has a mature community of hardware and software developers. Coupled with the very low cost and wide availability of modular components, this platform has significantly lowered the barrier to entry for many would-be hardware developers who would otherwise be put off by the expense and expertise required to build specialist equipment. This book is a foray into the rise of the maker movement for biologists. The introductory chapters cover an array of essential topics which develop the skills necessary to build open hardware devices. These are accompanied by a series of exemplar projects which put this theory into practice, highlighting the ease with which the Arduino platform can be repurposed for multiple uses. These use cases highlight why the transformation to Open Hardware is an essential component of the Open Science Movement. Many address neche scientific endeavours which could never be commercialised. For example, the chapter on building a snail heart rate monitor has a clear scientific objective which opens a new window into the biology of snails, but is unlikely to attract the attention of IBM, Google or Microsoft. Other projects have commercial equivalents available but at a significantly higher cost, and lack flexibility. One advantage of Arduino is that several of these projects could be combined into a single integrated device that addresses multiple questions, increasing the cost saving by an order of magnitude over independent commercial solutions. For example, a data logger can easily be integrated with a camera trap, helping to correlate behavior with environmental  conditions. The chapter on the Open Source Data Logger (OSDL) project covers integration of multiple devices over large geographic distances to create a modular sensor network. The book concludes with a short series of chapters on linking these devices to external platforms such as MatLab and Open Source Web content Management Systems. Linking a sensor network to the Internet, moves us toward the vision of the Internet-of-Things, in which potentially even the biotic and abiotic elements of an environment can be monitored continuously in real time. The potential application for this wealth of data are presently hard to conceive, but like any field exposed to the big data revolution, the outcome is likely to be transformative. Most predictives studies on the natural world, rely upon large and high quality datasets that track spatial and temporal changes and correlate these which environmental change. These data are typically time consuming to collect, involving months and sometimes years of repeated field studies that are exceptionally difficult and costly to sustain. The rise of automated monitoring has the potential to transform field studies, providing continuous data collection at ever improving levels of resolution. This takes the biological community a huge leap towards the goal of modeling the every facet of the biosphere, and being able to make predictive use of these data to address some of the long term challenges facing humanity, such as climate change, developing sustainable food resources and controlling the impact of invasive species. The rise of the Open Hardware movement has the potential to add a final layer of accountability of transparency to the scientific process. In the past, scientific hardware has quite literally been a black-box, which is opaque to all but a handful of specialists who understand the constraints and limits of these systems. Often commercial interests reinforce this opacity, leading to patents that prevent others from further development. The rise of the maker movement, and particularly systems like Arduino, provide an opportunity to transform the business models of these industries in the same way that has happened for the Open Source and Open Access movement. Rather than the construction of paid-for systems that limit innovation and reuse, Open Hardware creates an opportunity for the makers of platforms to commercialise services around these systems. For example, within the Open Source software community, RedHat and Aquia sell services around open source products that they have contributed significantly to. Likewise within the Open Access movement, publishers increasingly monetise services around the peer review of scientific articles, rather rather than access to the article. These transformations in business models keep the underlying platforms free and open to innovation for most, while providing commercial levels of support with agreed levels of service provision for those that need it. It is still early days for the Open Hardware movement, particularly in the biological sciences where specialist skills in niche areas are still required to develop and deploy systems. My hope is that books like this can help seed the same transformation which has taken place in other stages of the scientific process, so that the emphasis on development switches to the building of open platforms for hardware development, rather than bespoke products and proprietary systems. "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
